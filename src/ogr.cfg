[n.global]
src_version = "2.2.4"
output = "wrap"

[n.include]
"${output}/gdal/gcore"
"${output}/gdal/port"
"${output}/gdal/ogr"

# [n.prepare]
# gitremote = "https://github.com/OSGeo/gdal.git"
# # gitcheckout = "-b release/2.2"
# gitsparse = """
# gdal/port/*
# gdal/gcore/*
# gdal/ogr/*
# """

[n.exclude]
cpl_config.h
gdal_version.h

[n.wildcard]
wildcard = "ogr_core.h"
search.CPL_WARN_DEPRECATED = "void CPL_DLL *OGRMalloc( size_t ) CPL_WARN_DEPRECATED("Use CPLMalloc instead.");"
comment.CPL_WARN_UNUSED_RESULT = 5
wildcard = "ogr_api.h"
search.CPL_WARN_UNUSED_RESULT = "CPL_WARN_UNUSED_RESULT"
replace.CPL_WARN_UNUSED_RESULT = ""
search.CPL_WARN_DEPRECATED = """int    CPL_DLL OGR_G_Intersect( OGRGeometryH, OGRGeometryH ) CPL_WARN_DEPRECATED("Non standard method. Use OGR_G_Intersects() instead");"""
comment.CPL_WARN_DEPRECATED = 5

[wrap/gdal/port/cpl_config.h]
create = """
# define SIZEOF_INT 4
# define SIZEOF_UNSIGNED_LONG 4
#ifdef _WIN64
# define SIZEOF_VOIDP 8
#else
# define SIZEOF_VOIDP 4
#endif
# define HAVE_LONG_LONG 1
"""

[wrap/gdal/ogr/ogr_api.h]
preprocess = true
defines = true
recurse = true
# inline = true

dynlib.win = libgdal.dll
dynlib.lin = libgdal.so
dynlib.osx = libgdal.dylib

[ogr_api.nim]
search.import = "import wrap/cpl_progress"
comment.import = 3
prepend = """
import cpl_port
import cpl_progress
import cpl_minixml
import ogr_core
export cpl_port
export cpl_progress
export cpl_minixml
export ogr_core
"""

search.CPLXMLNode = "  _CPLXMLNode* {.bycopy.} = object"
comment.CPLXMLNode = 1

search.OGRGeometryH = "OGRGeometryH* = pointer"
replace.OGRGeometryH = "OGRGeometry = object\n  OGRGeometryH* = ptr OGRGeometry"
search.OGRSpatialReferenceH = "OGRSpatialReferenceH* = pointer"
replace.OGRSpatialReferenceH = "OGRSpatialReference = object\n  OGRSpatialReferenceH* = ptr OGRSpatialReference"
search.OGRCoordinateTransformationH = "OGRCoordinateTransformationH* = pointer"
replace.OGRCoordinateTransformationH = "OGRCoordinateTransformation = object\n  OGRCoordinateTransformationH* = ptr OGRCoordinateTransformation"
search.OGRFieldDefnH = "OGRFieldDefnH* = pointer"
replace.OGRFieldDefnH = "OGRFieldDefn = object\n  OGRFieldDefnH* = ptr OGRFieldDefn"
search.OGRFeatureDefnH = "OGRFeatureDefnH* = pointer"
replace.OGRFeatureDefnH = "OGRFeatureDefn = object\n  OGRFeatureDefnH* = ptr OGRFeatureDefn"
search.OGRFeatureH = "OGRFeatureH* = pointer"
replace.OGRFeatureH = "OGRFeature = object\n  OGRFeatureH* = ptr OGRFeature"
search.OGRStyleTableH  = "OGRStyleTableH* = pointer"
replace.OGRStyleTableH = "OGRStyleTable = object\n  OGRStyleTableH* = ptr OGRStyleTable"
search.OGRGeomFieldDefnH = "OGRGeomFieldDefnH* = ptr OGRGeomFieldDefnHS"
replace.OGRGeomFieldDefnH = "OGRGeomFieldDefn = object\n  OGRGeomFieldDefnH* = ptr OGRGeomFieldDefn"
search.OGRLayerH = "OGRLayerH* = pointer"
replace.OGRLayerH = "OGRLayer = object\n  OGRLayerH* = ptr OGRLayer"
search.OGRDataSourceH = "OGRDataSourceH* = pointer"
replace.OGRDataSourceH = "OGRDataSource = object\n  OGRDataSourceH* = ptr OGRDataSource"
search.OGRSFDriverH = "OGRSFDriverH* = pointer"
replace.OGRSFDriverH = "OGRSFDriver = object\n  OGRSFDriverH* = ptr OGRSFDriver"
search.OGRStyleMgrH = "OGRStyleMgrH* = pointer"
replace.OGRStyleMgrH = "OGRStyleMgr = object\n  OGRStyleMgrH* = ptr OGRStyleMgr"
search.OGRStyleToolH = "OGRStyleToolH* = pointer"
replace.OGRStyleToolH = "OGRStyleTool = object\n  OGRStyleToolH* = ptr OGRStyleTool"

[cpl_minixml.nim]
search.1 = "import wrap/cpl_port"
comment.1 = 1

[cpl_progress.nim]
search.1 = "import wrap/cpl_port"
comment.1 = 1

[cpl_port.nim]
search.when = "when defined(Windows):"
comment.when = 8

search.LARGEFILE64_SOURCE = "  _LARGEFILE64_SOURCE* = 1"
comment.LARGEFILE64_SOURCE = 3
search.CPL_HAS_GINT64 = "  CPL_HAS_GINT64* = 1"
comment.CPL_HAS_GINT64 = 1
search.HAS_CPL_INLINE = "  HAS_CPL_INLINE* = 1"
comment.HAS_CPL_INLINE = 1
search.CPL_IS_LSB = "  CPL_IS_LSB* = 0"
comment.CPL_IS_LSB = 1
search.CPL_FINAL = "  CPL_FINAL* = f"
comment.CPL_FINAL = 1
search.FALSE = "  FALSE* = f"
comment.FALSE = 1

[ogr_core.nim]
search.import = "import wrap/cpl_port"
comment.import = 1

search.INNER = "INNER_C_STRUCT_temp"
comment.INNER = 34
search.OGRField = "  OGRField* {.bycopy.} = object {.union.}"
comment.OGRField = 12
search.appendOGRField = "OJUndefined = 0, OJLeft = 1, OJRight = 2"
append.appendOGRField = "\n  OGRField* {.bycopy.} = object"

search.OFTMaxType = """
const
  OFTMaxType = OFTInteger64List
"""
comment.OFTMaxType = 2
search.OFSTMaxSubType = """
const
  OFSTMaxSubType = OFSTFloat32
"""
comment.OFSTMaxSubType = 2
search.OFSTMaxSubType_2 = """
const
  OFSTMaxSubType = OFSTJSON
"""
comment.OFSTMaxSubType_2 = 2